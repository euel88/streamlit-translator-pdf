# .github/workflows/streamlit.yml
# GitHub Actions 워크플로우 - 자동 테스트 및 Streamlit Cloud 배포

name: Streamlit App CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # 문법 오류나 정의되지 않은 이름 확인
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 복잡도 경고를 exit-zero로 처리
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        # 테스트 실행 (tests 폴더가 있는 경우)
        if [ -d "tests" ]; then
          pytest tests/ --cov=./ --cov-report=xml
        else
          echo "No tests directory found, skipping tests"
        fi
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Create deployment package
      run: |
        # 배포 패키지 생성
        mkdir -p deployment
        cp streamlit_app.py deployment/
        cp core.py deployment/
        cp document_handler.py deployment/
        cp ocr_engine.py deployment/ 2>/dev/null || true
        cp requirements.txt deployment/
        cp -r .streamlit deployment/ 2>/dev/null || true
        
        # 설정 파일에서 민감한 정보 제거
        if [ -f "deployment/.streamlit/secrets.toml" ]; then
          rm deployment/.streamlit/secrets.toml
        fi
        
        # 버전 정보 추가
        echo "VERSION=$(date +'%Y%m%d.%H%M%S')" > deployment/version.txt
        echo "COMMIT=${{ github.sha }}" >> deployment/version.txt
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: deployment-package
        path: deployment/
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: deployment/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-notification:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment
      run: |
        echo "✅ Deployment ready!"
        echo "📦 Package has been built and is ready for Streamlit Cloud deployment"
        echo "🔗 Go to https://share.streamlit.io to deploy your app"
        echo "📝 Use the following settings:"
        echo "  - Repository: ${{ github.repository }}"
        echo "  - Branch: main"
        echo "  - Main file: streamlit_app.py"
